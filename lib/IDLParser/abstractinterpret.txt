
COMPUTATION:

 => The computation that is to be found in source code
    and replaced with efficient library call.

 => The following operations are performed:
    => The expression is parsed by a custom parser. (done)
    => C function interface is generated by infering the
       types of the contained variables.            (done)
    => A naive C++ implementation is generated.     (done)
    => The naive C++ implementation is compiled as a
       shared library inside the clang build system along
       our custom compiler.                         (done)
    => The constraint specification is generated from this
       simple language.                         (not done)
    => Found instances are automatically replaced with
       call to harness function.                (not done)

HARNESS:

 => A fast implementation of the previously specified
    computation that uses a specific library:

 => The following operations are performed:
    => Only the TRANSFORMATIONS are parsed, the main part
       is just arbitrary C++ code.                  (done)
    => The code is glued together with some boilerplate
       to generate an implementation of the required
       harness, lazy memory copy is automatic.      (done)
    => The implementation is compiled as a shared library
       inside the clang build system along our custom
       compiler.                                    (done)

READABLE and WRITABLE:

 => Building blocks for harnesses, mostly just C++ code
    that's glued together.                          (done)
